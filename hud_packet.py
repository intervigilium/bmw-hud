#!/usr/bin/env python3

import argparse
import socket


def send_msg(args):
    hud = ("192.168.10.1", 50007)

    hello_msg = [
        0x7a, 0x01, 0x01, 0x15,
        0x13, 0x01
    ]

    server_ack_msg = [
        0x7c, 0x04, 0x01, 0x00,
        0x00
    ]

    empty_msg = [
        0x7a, 0x02, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00,
        0x00, 0xff, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x01,
        0x00, 0x01
    ]

    replay_msg1 = [
        0x7a, 0x02, 0x00, 0x00,
        0x00, 0x00, 0x23, 0x80,
        0x00, 0x00, 0x00, 0x05,
        0x03, 0x01, 0x00, 0x09,
        0x24, 0x01, 0xa5, 0x35,
        0x00, 0x00, 0x00, 0x01,
        0xb5, 0x01
    ]

    replay_msg2 = [
        0x7a, 0x02, 0x00, 0x00,
        0x00, 0x00, 0x23, 0x73,
        0x00, 0x00, 0x00, 0x05,
        0x03, 0x01, 0x00, 0x09,
        0x24, 0x01, 0x98, 0x35,
        0x00, 0x00, 0x00, 0x01,
        0x9b, 0x01
    ]

    replay_msg3 = [
        0x7a, 0x02, 0x00, 0x00,
        0x00, 0x00, 0x23, 0x00,
        0x00, 0x00, 0x00, 0x08,
        0x01, 0x01, 0x00, 0x09,
        0x22, 0x01, 0xc3, 0x31,
        0x00, 0x00, 0x00, 0x01,
        0x4e, 0x01
    ]

    test_msg = [
        0x7a, 0x02, 0x00, 0x00,
        0x00, 0x00, 0x23, 0x80,
        0x00, 0x00, 0x00, 0x05,
        0x03, 0x01, 0x00, 0x09,
        0x24, 0x01, 0xa5, 0x35,
        0x00, 0x00, 0x00, 0x01,
        0xb5, 0x01
    ]

    messages = [
        empty_msg,
        replay_msg1,
        replay_msg2,
        replay_msg3,
        test_msg,
    ]

    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)

    print("connecting to HUD")
    s.connect(hud)

    msg = bytearray(messages[args.msg])
    print("sending message: {}".format(msg))
    s.sendall(msg)

    print("receiving response")
    data = s.recv(1024)

    print("received {}".format(data))


def parse_args():
    parser = argparse.ArgumentParser(description='Send packets to BMW HUD.')
    parser.add_argument("--msg", type=int, required=True, help="message index to replay")

    return parser.parse_args()


def main():
    args = parse_args()
    send_msg(args)


if __name__ == "__main__":
    main()
